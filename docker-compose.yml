services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: cms-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./docker/sql:/docker-entrypoint-initdb.d
    networks:
      - cms-network

  db-init:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - sqlserver
    entrypoint: ["/bin/bash", "/init-db.sh"]
    volumes:
      - ./init-db.sh:/init-db.sh
      - ./docker/sql:/docker/sql
    networks:
      - cms-network
  auth-service:
    build:
      context: ./backend/services/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "5001:5001"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - DB_CONNECTION_STRING=${DB_CONNECTION_STRING}
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - cms-network
    depends_on:
      - sqlserver

  contact-service:
    build:
      context: ./backend/services/contact-service
      dockerfile: Dockerfile
    container_name: contact-service
    ports:
      - "5002:5002"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - DB_CONNECTION_STRING=${DB_CONNECTION_STRING}
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - cms-network
    depends_on:
      - sqlserver

  api-gateway:
    build:
      context: ./backend
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - cms-network
    depends_on:
      - auth-service
      - contact-service

volumes:
  sqlserver_data:

networks:
  cms-network:
    driver: bridge
